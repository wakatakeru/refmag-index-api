// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/paper_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/wakatakeru/refmag-index-api/domain"
	reflect "reflect"
)

// MockPaperRepository is a mock of PaperRepository interface.
type MockPaperRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPaperRepositoryMockRecorder
}

// MockPaperRepositoryMockRecorder is the mock recorder for MockPaperRepository.
type MockPaperRepositoryMockRecorder struct {
	mock *MockPaperRepository
}

// NewMockPaperRepository creates a new mock instance.
func NewMockPaperRepository(ctrl *gomock.Controller) *MockPaperRepository {
	mock := &MockPaperRepository{ctrl: ctrl}
	mock.recorder = &MockPaperRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaperRepository) EXPECT() *MockPaperRepositoryMockRecorder {
	return m.recorder
}

// Store mocks base method.
func (m *MockPaperRepository) Store(arg0 domain.Paper) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Store indicates an expected call of Store.
func (mr *MockPaperRepositoryMockRecorder) Store(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockPaperRepository)(nil).Store), arg0)
}

// FindByID mocks base method.
func (m *MockPaperRepository) FindByID(arg0 int) (domain.Paper, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", arg0)
	ret0, _ := ret[0].(domain.Paper)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockPaperRepositoryMockRecorder) FindByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockPaperRepository)(nil).FindByID), arg0)
}

// FindAll mocks base method.
func (m *MockPaperRepository) FindAll() (domain.Papers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll")
	ret0, _ := ret[0].(domain.Papers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockPaperRepositoryMockRecorder) FindAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockPaperRepository)(nil).FindAll))
}
